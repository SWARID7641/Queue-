#include <iostream>
using namespace std;
#define n 20
class que
{ public:
 
  int * arr;
  int front;
  int rear;
 
   
  que()
  {
      arr=new int [n];
      front =-1;
      rear=-1;
  }
 
  void push(int x)
  {
      if (rear==n)
      {
          cout<<"queue overflow"<<endl;
          return;
      }
      else
      {
          rear++;
          arr[rear]=x;
         
      }
      if(front==-1)
      {
          front++;
      }
     
  }
 
     void pop()
    {
         if(front==-1  || front>rear)
          {
              cout<<"no element in queue"<<endl;
              return;
          }
          front ++;
    }
 
 
   int peek()
      {
          if(front==-1 ||front>rear)
          {
              cout<<"no element in queue"<<endl;
              return -1;
          }
          else
          {
            return arr[front];
          }
      }
     
      bool empty()
      {
           if(front==-1  ||front>rear)
          {
              cout<<"no element in queue"<<endl;
              return true;
          }
          return false;
         
      }
   
};

int main()
{
   
    que q;
    q.push(1);
    q.push(2);
    q.push(3);
    q.push(4);
    q.push(5);

    cout<<q.peek()<<endl;
    q.pop();
   
    cout<<q.peek()<<endl;
    q.pop();
   
    cout<<q.peek()<<endl;
    q.pop();
   
    cout<<q.peek()<<endl;
    q.pop();
   
    cout<<q.peek()<<endl;
    q.pop();
   
    cout<<q.empty()<<endl;
   
    return 0;
}
